import discord, os
from discord.ext import commands
from dotenv import load_dotenv
import ia_def

load_dotenv()

token = os.getenv("dt")

intent = discord.Intents.default()
intent.message_content = True

bot = commands.Bot(command_prefix= "-", intents=intent)

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}')

@bot.command(name = "file")
async def check(ctx):
    if ctx.message.attachments:
        for attach in ctx.message.attachments:
            file_name = attach.filename
            file_url = attach.url
            await attach.save(f"./{file_name}")
            await ctx.send(f"Guarda la imagen en ./{file_name}")
    else:
        await ctx.send("You forgot to load a file")

@bot.command(name = "AI")
async def checkIA(ctx):
    if ctx.message.attachments:
        for attach in ctx.message.attachments:
            file_name = attach.filename
            file_url = attach.url
            img = f"./{attach.filename}"
            model_path = "./keras_model.h5"
            label_path = "./labels.txt"

            result = ia_def.classify_img(image_path = img, model_path = model_path, labels_path = label_path)
            if not isinstance(result, (list, tuple) or len(result)) < 2:
                await ctx.send("There was an error uploading de image")
                return
    
            class_name, confidence_score = result[:2]
            confidence_percentage = float(confidence_score) * 100   
            embed = discord.Embed(
                title = "Classification Result",
                description = f"**Class:**, {class_name[2:].strip()}\nConfidence Score: {confidence_percentage: .2f}%",
                color = discord.Color.yellow()
            )
            embed.set_image(url = file_url)
            embed.set_footer(text = "Created with Keras and TensorFlow")

            await attach.save(f"./{file_name}")
            await ctx.send(embed = embed)
    else:
        await ctx.send("You forgot to load a file")    

bot.run(token)